# -*- coding: utf-8 -*-
"""CA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WyCqH4LpOJO6lU6EiyVWW9_iKbSjxRSK

# Hyperlink Induced Topic Search (HITS) Algorithm
"""

import numpy as np
import numpy.linalg as la

def hits(adjmat):
    #Compute AA^(T) and A^(T)A
    aat=adjmat.dot(adjmat.T)
    ata=adjmat.T.dot(adjmat)
    # Computer principal eigenvectors of aat and ata to form vector of hub scores (h) and authority scores(a)
    eval1, evec1=la.eig(aat)
    eval2, evec2=la.eig(ata)
    order1=np.absolute(eval1).argsort()[::-1]
    order2=np.absolute(eval2).argsort()[::-1]
    hubs=evec1[:,order1[0]]
    auths=evec2[:,order2[0]]
    return np.real(hubs/np.sum(hubs)), np.real(auths/np.sum(auths))

adjMat = np.array([[0, 1/3, 1/3, 1/3],
                  [1, 0, 1/3, 1/3],
                  [0, 1/3, 0, 1/3],
                  [0, 1/3, 1/3, 0]])
hubs, auths = hits(adjMat)
print("Hub Scores:", hubs)
print("Authority Scores:", auths)

"""# PageRank Algorithm

## Power Iterative Method
"""

def powerIteration(adjmat, maxiter=100):
    n=adjmat.shape[0]
    pagerank=np.array([[1/4], [1/4], [1/4], [1/4]])
    for i in range(maxiter):
        newrank=adjmat.dot(pagerank)
        if np.allclose(pagerank, newrank):
            print("Converges in step", i)
            # print(newrank)
            break
        pagerank=newrank
    return pagerank

adjMat = np.array([[0, 1/3, 1/3, 1/3],
                  [1, 0, 1/3, 1/3],
                  [0, 1/3, 0, 1/3],
                  [0, 1/3, 1/3, 0]])
print(powerIteration(adjMat))

"""## Eigen Value Method"""

def eigenValue(adjmat):
    eval, evec=la.eig(adjmat)
    order=np.absolute(eval).argsort()[::-1]
    pagerank=evec[:, order[0]]
    # return pagerank
    return np.real(pagerank/np.sum(pagerank))

adjMat = np.array([[1/6, 2/3, 1/6],
                  [5/12, 1/6, 5/12],
                  [1/6, 2/3, 1/6]])
print(eigenValue(adjMat))